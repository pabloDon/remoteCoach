if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (typeof _$jscoverage['lib/frequency.js'] === 'undefined'){_$jscoverage['lib/frequency.js']=[];
_$jscoverage['lib/frequency.js'].source=['',
'/*',
' *',
' * node-rss-frequency',
' * Frequency.coffee',
' * Author:@nikezono',
' * RSSフィードの更新頻度を算出する',
' *',
' */',
'',
'(function() {',
'  var parser, _;',
'',
'  parser = require(\'parse-rss\');',
'',
'  _ = require(\'underscore\');',
'',
'  module.exports = function(feed, callback) {',
'    return parser(feed, function(error, articles) {',
'      var avr, date, dates, diff, i, _i, _len;',
'      if (error) {',
'        return callback(error, null);',
'      }',
'      avr = 0;',
'      dates = _.pluck(articles, \'pubDate\');',
'      for (i = _i = 0, _len = dates.length; _i < _len; i = ++_i) {',
'        date = dates[i];',
'        if (dates.length === i + 1) {',
'          break;',
'        }',
'        diff = dates[i] / 1000 - dates[i + 1] / 1000;',
'        avr = avr + diff;',
'      }',
'      avr = avr / dates.length;',
'      return callback(null, avr);',
'    });',
'  };',
'',
'}).call(this);',
''];
_$jscoverage['lib/frequency.js'][29]=0;
_$jscoverage['lib/frequency.js'][11]=0;
_$jscoverage['lib/frequency.js'][28]=0;
_$jscoverage['lib/frequency.js'][12]=0;
_$jscoverage['lib/frequency.js'][31]=0;
_$jscoverage['lib/frequency.js'][16]=0;
_$jscoverage['lib/frequency.js'][14]=0;
_$jscoverage['lib/frequency.js'][26]=0;
_$jscoverage['lib/frequency.js'][22]=0;
_$jscoverage['lib/frequency.js'][18]=0;
_$jscoverage['lib/frequency.js'][20]=0;
_$jscoverage['lib/frequency.js'][21]=0;
_$jscoverage['lib/frequency.js'][19]=0;
_$jscoverage['lib/frequency.js'][24]=0;
_$jscoverage['lib/frequency.js'][25]=0;
_$jscoverage['lib/frequency.js'][27]=0;
_$jscoverage['lib/frequency.js'][32]=0;
_$jscoverage['lib/frequency.js'][34]=0;
_$jscoverage['lib/frequency.js'][35]=0;
}
/*
 *
 * node-rss-frequency
 * Frequency.coffee
 * Author:@nikezono
 * RSSフィードの更新頻度を算出する
 *
 */

_$jscoverage['lib/frequency.js'][11]++;
(function() {
  _$jscoverage['lib/frequency.js'][12]++;
var parser, _;

  _$jscoverage['lib/frequency.js'][14]++;
parser = require('parse-rss');

  _$jscoverage['lib/frequency.js'][16]++;
_ = require('underscore');

  _$jscoverage['lib/frequency.js'][18]++;
module.exports = function(feed, callback) {
    _$jscoverage['lib/frequency.js'][19]++;
return parser(feed, function(error, articles) {
      _$jscoverage['lib/frequency.js'][20]++;
var avr, date, dates, diff, i, _i, _len;
      _$jscoverage['lib/frequency.js'][21]++;
if (error) {
        _$jscoverage['lib/frequency.js'][22]++;
return callback(error, null);
      }
      _$jscoverage['lib/frequency.js'][24]++;
avr = 0;
      _$jscoverage['lib/frequency.js'][25]++;
dates = _.pluck(articles, 'pubDate');
      _$jscoverage['lib/frequency.js'][26]++;
for (i = _i = 0, _len = dates.length; _i < _len; i = ++_i) {
        _$jscoverage['lib/frequency.js'][27]++;
date = dates[i];
        _$jscoverage['lib/frequency.js'][28]++;
if (dates.length === i + 1) {
          _$jscoverage['lib/frequency.js'][29]++;
break;
        }
        _$jscoverage['lib/frequency.js'][31]++;
diff = dates[i] / 1000 - dates[i + 1] / 1000;
        _$jscoverage['lib/frequency.js'][32]++;
avr = avr + diff;
      }
      _$jscoverage['lib/frequency.js'][34]++;
avr = avr / dates.length;
      _$jscoverage['lib/frequency.js'][35]++;
return callback(null, avr);
    });
  };

}).call(this);
