if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (typeof _$jscoverage['lib/watcher.js'] === 'undefined'){_$jscoverage['lib/watcher.js']=[];
_$jscoverage['lib/watcher.js'].source=['',
'/*',
' *',
' * watcher.coffee',
' *',
' * Author:@nikezono',
' *',
' */',
'',
'(function() {',
'  var EventEmitter, Watcher, parser, request,',
'    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },',
'    __hasProp = {}.hasOwnProperty,',
'    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };',
'',
'  EventEmitter = require(\'events\').EventEmitter;',
'',
'  parser = require(\'parse-rss\');',
'',
'  Watcher = (function(_super) {',
'    __extends(Watcher, _super);',
'',
'    function Watcher(feedUrl) {',
'      this.stop = __bind(this.stop, this);',
'      this.run = __bind(this.run, this);',
'      if (!feedUrl || feedUrl === void 0) {',
'        throw new Error("arguments error.");',
'      }',
'      this.feedUrl = feedUrl;',
'      this.interval = null;',
'      this.lastPubDate = null;',
'      this.timer = null;',
'      this.watch = (function(_this) {',
'        return function() {',
'          var fetch;',
'          fetch = function() {',
'            return request(_this.feedUrl, function(err, articles) {',
'              var article, _i, _len, _results;',
'              if (err) {',
'                return _this.emit(\'error\', err);',
'              }',
'              _results = [];',
'              for (_i = 0, _len = articles.length; _i < _len; _i++) {',
'                article = articles[_i];',
'                if (!_this.lastPubDate || _this.lastPubDate < article.pubDate / 1000) {',
'                  _this.emit(\'new article\', article);',
'                  _results.push(_this.lastPubDate = article.pubDate / 1000);',
'                } else {',
'                  _results.push(void 0);',
'                }',
'              }',
'              return _results;',
'            });',
'          };',
'          return setInterval(function() {',
'            return fetch(this.feedUrl);',
'          }, _this.interval * 1000);',
'        };',
'      })(this);',
'    }',
'',
'    Watcher.prototype.set = function(obj) {',
'      var flag;',
'      flag = false;',
'      if (obj.feedUrl != null) {',
'        if (obj.feedUrl != null) {',
'          this.feedUrl = obj.feedUrl;',
'        }',
'        flag = true;',
'      }',
'      if (obj.interval != null) {',
'        if (obj.interval != null) {',
'          this.interval = obj.interval;',
'        }',
'        flag = true;',
'      }',
'      return flag;',
'    };',
'',
'    Watcher.prototype.run = function(callback) {',
'      var frequency, initialize;',
'      initialize = (function(_this) {',
'        return function(callback) {',
'          return request(_this.feedUrl, function(err, articles) {',
'            if ((err != null) && (callback != null)) {',
'              return callback(new Error(err), null);',
'            }',
'            _this.lastPubDate = articles[articles.length - 1].pubDate / 1000;',
'            _this.timer = _this.watch();',
'            if (callback != null) {',
'              return callback(null, articles);',
'            }',
'          });',
'        };',
'      })(this);',
'      if (!this.interval || typeof this.interval === \'function\') {',
'        frequency = require(\'rss-frequency\');',
'        return frequency(this.feedUrl, (function(_this) {',
'          return function(error, interval) {',
'            if (error != null) {',
'              if (callback != null) {',
'                return callback(new Error(error), null);',
'              }',
'            }',
'            if (typeof _this.interval === \'function\') {',
'              _this.interval = _this.interval(interval);',
'            } else {',
'              _this.interval = interval;',
'            }',
'            if (isNaN(_this.interval / 1)) {',
'              if (callback != null) {',
'                return callback(new Error("interval object isnt instanceof Number"), null);',
'              }',
'            }',
'            if (_this.interval / 1 < 0) {',
'              if (callback != null) {',
'                return callback(new Error("interval has given negative value"), null);',
'              }',
'            }',
'            return initialize(callback);',
'          };',
'        })(this));',
'      } else {',
'        return initialize(callback);',
'      }',
'    };',
'',
'    Watcher.prototype.stop = function() {',
'      if (!this.timer) {',
'        throw new Error("RSS-Watcher isnt running now");',
'      }',
'      clearInterval(this.timer);',
'      return this.emit(\'stop\');',
'    };',
'',
'    return Watcher;',
'',
'  })(EventEmitter);',
'',
'  request = (function(_this) {',
'    return function(feedUrl, callback) {',
'      return parser(feedUrl, function(err, articles) {',
'        if (err != null) {',
'          return callback(err, null);',
'        }',
'        articles.sort(function(a, b) {',
'          return a.pubDate / 1000 - b.pubDate / 1000;',
'        });',
'        return callback(null, articles);',
'      });',
'    };',
'  })(this);',
'',
'  module.exports = Watcher;',
'',
'}).call(this);',
''];
_$jscoverage['lib/watcher.js'][75]=0;
_$jscoverage['lib/watcher.js'][10]=0;
_$jscoverage['lib/watcher.js'][71]=0;
_$jscoverage['lib/watcher.js'][12]=0;
_$jscoverage['lib/watcher.js'][12]=0;
_$jscoverage['lib/watcher.js'][11]=0;
_$jscoverage['lib/watcher.js'][62]=0;
_$jscoverage['lib/watcher.js'][14]=0;
_$jscoverage['lib/watcher.js'][14]=0;
_$jscoverage['lib/watcher.js'][14]=0;
_$jscoverage['lib/watcher.js'][14]=0;
_$jscoverage['lib/watcher.js'][14]=0;
_$jscoverage['lib/watcher.js'][14]=0;
_$jscoverage['lib/watcher.js'][14]=0;
_$jscoverage['lib/watcher.js'][14]=0;
_$jscoverage['lib/watcher.js'][88]=0;
_$jscoverage['lib/watcher.js'][14]=0;
_$jscoverage['lib/watcher.js'][89]=0;
_$jscoverage['lib/watcher.js'][24]=0;
_$jscoverage['lib/watcher.js'][20]=0;
_$jscoverage['lib/watcher.js'][16]=0;
_$jscoverage['lib/watcher.js'][18]=0;
_$jscoverage['lib/watcher.js'][21]=0;
_$jscoverage['lib/watcher.js'][23]=0;
_$jscoverage['lib/watcher.js'][83]=0;
_$jscoverage['lib/watcher.js'][27]=0;
_$jscoverage['lib/watcher.js'][26]=0;
_$jscoverage['lib/watcher.js'][25]=0;
_$jscoverage['lib/watcher.js'][97]=0;
_$jscoverage['lib/watcher.js'][38]=0;
_$jscoverage['lib/watcher.js'][29]=0;
_$jscoverage['lib/watcher.js'][30]=0;
_$jscoverage['lib/watcher.js'][31]=0;
_$jscoverage['lib/watcher.js'][32]=0;
_$jscoverage['lib/watcher.js'][35]=0;
_$jscoverage['lib/watcher.js'][37]=0;
_$jscoverage['lib/watcher.js'][36]=0;
_$jscoverage['lib/watcher.js'][33]=0;
_$jscoverage['lib/watcher.js'][34]=0;
_$jscoverage['lib/watcher.js'][108]=0;
_$jscoverage['lib/watcher.js'][44]=0;
_$jscoverage['lib/watcher.js'][40]=0;
_$jscoverage['lib/watcher.js'][39]=0;
_$jscoverage['lib/watcher.js'][42]=0;
_$jscoverage['lib/watcher.js'][43]=0;
_$jscoverage['lib/watcher.js'][111]=0;
_$jscoverage['lib/watcher.js'][55]=0;
_$jscoverage['lib/watcher.js'][47]=0;
_$jscoverage['lib/watcher.js'][46]=0;
_$jscoverage['lib/watcher.js'][52]=0;
_$jscoverage['lib/watcher.js'][49]=0;
_$jscoverage['lib/watcher.js'][45]=0;
_$jscoverage['lib/watcher.js'][115]=0;
_$jscoverage['lib/watcher.js'][66]=0;
_$jscoverage['lib/watcher.js'][65]=0;
_$jscoverage['lib/watcher.js'][56]=0;
_$jscoverage['lib/watcher.js'][63]=0;
_$jscoverage['lib/watcher.js'][64]=0;
_$jscoverage['lib/watcher.js'][98]=0;
_$jscoverage['lib/watcher.js'][77]=0;
_$jscoverage['lib/watcher.js'][67]=0;
_$jscoverage['lib/watcher.js'][69]=0;
_$jscoverage['lib/watcher.js'][72]=0;
_$jscoverage['lib/watcher.js'][73]=0;
_$jscoverage['lib/watcher.js'][80]=0;
_$jscoverage['lib/watcher.js'][82]=0;
_$jscoverage['lib/watcher.js'][81]=0;
_$jscoverage['lib/watcher.js'][130]=0;
_$jscoverage['lib/watcher.js'][85]=0;
_$jscoverage['lib/watcher.js'][84]=0;
_$jscoverage['lib/watcher.js'][132]=0;
_$jscoverage['lib/watcher.js'][100]=0;
_$jscoverage['lib/watcher.js'][86]=0;
_$jscoverage['lib/watcher.js'][96]=0;
_$jscoverage['lib/watcher.js'][91]=0;
_$jscoverage['lib/watcher.js'][99]=0;
_$jscoverage['lib/watcher.js'][90]=0;
_$jscoverage['lib/watcher.js'][136]=0;
_$jscoverage['lib/watcher.js'][105]=0;
_$jscoverage['lib/watcher.js'][101]=0;
_$jscoverage['lib/watcher.js'][102]=0;
_$jscoverage['lib/watcher.js'][144]=0;
_$jscoverage['lib/watcher.js'][110]=0;
_$jscoverage['lib/watcher.js'][106]=0;
_$jscoverage['lib/watcher.js'][147]=0;
_$jscoverage['lib/watcher.js'][120]=0;
_$jscoverage['lib/watcher.js'][112]=0;
_$jscoverage['lib/watcher.js'][117]=0;
_$jscoverage['lib/watcher.js'][116]=0;
_$jscoverage['lib/watcher.js'][149]=0;
_$jscoverage['lib/watcher.js'][128]=0;
_$jscoverage['lib/watcher.js'][124]=0;
_$jscoverage['lib/watcher.js'][129]=0;
_$jscoverage['lib/watcher.js'][133]=0;
_$jscoverage['lib/watcher.js'][140]=0;
_$jscoverage['lib/watcher.js'][141]=0;
_$jscoverage['lib/watcher.js'][142]=0;
_$jscoverage['lib/watcher.js'][143]=0;
_$jscoverage['lib/watcher.js'][146]=0;
_$jscoverage['lib/watcher.js'][154]=0;
}
/*
 *
 * watcher.coffee
 *
 * Author:@nikezono
 *
 */

_$jscoverage['lib/watcher.js'][10]++;
(function() {
  _$jscoverage['lib/watcher.js'][11]++;
var EventEmitter, Watcher, parser, request,
    __bind = function(fn, me){ _$jscoverage['lib/watcher.js'][12]++;
return function(){ _$jscoverage['lib/watcher.js'][12]++;
return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { _$jscoverage['lib/watcher.js'][14]++;
for (var key in parent) { _$jscoverage['lib/watcher.js'][14]++;
if (__hasProp.call(parent, key)) {
_$jscoverage['lib/watcher.js'][14]++;
child[key] = parent[key];}
 } _$jscoverage['lib/watcher.js'][14]++;
function ctor() { _$jscoverage['lib/watcher.js'][14]++;
this.constructor = child; } _$jscoverage['lib/watcher.js'][14]++;
ctor.prototype = parent.prototype; _$jscoverage['lib/watcher.js'][14]++;
child.prototype = new ctor(); _$jscoverage['lib/watcher.js'][14]++;
child.__super__ = parent.prototype; _$jscoverage['lib/watcher.js'][14]++;
return child; };

  _$jscoverage['lib/watcher.js'][16]++;
EventEmitter = require('events').EventEmitter;

  _$jscoverage['lib/watcher.js'][18]++;
parser = require('parse-rss');

  _$jscoverage['lib/watcher.js'][20]++;
Watcher = (function(_super) {
    _$jscoverage['lib/watcher.js'][21]++;
__extends(Watcher, _super);

    _$jscoverage['lib/watcher.js'][23]++;
function Watcher(feedUrl) {
      _$jscoverage['lib/watcher.js'][24]++;
this.stop = __bind(this.stop, this);
      _$jscoverage['lib/watcher.js'][25]++;
this.run = __bind(this.run, this);
      _$jscoverage['lib/watcher.js'][26]++;
if (!feedUrl || feedUrl === void 0) {
        _$jscoverage['lib/watcher.js'][27]++;
throw new Error("arguments error.");
      }
      _$jscoverage['lib/watcher.js'][29]++;
this.feedUrl = feedUrl;
      _$jscoverage['lib/watcher.js'][30]++;
this.interval = null;
      _$jscoverage['lib/watcher.js'][31]++;
this.lastPubDate = null;
      _$jscoverage['lib/watcher.js'][32]++;
this.timer = null;
      _$jscoverage['lib/watcher.js'][33]++;
this.watch = (function(_this) {
        _$jscoverage['lib/watcher.js'][34]++;
return function() {
          _$jscoverage['lib/watcher.js'][35]++;
var fetch;
          _$jscoverage['lib/watcher.js'][36]++;
fetch = function() {
            _$jscoverage['lib/watcher.js'][37]++;
return request(_this.feedUrl, function(err, articles) {
              _$jscoverage['lib/watcher.js'][38]++;
var article, _i, _len, _results;
              _$jscoverage['lib/watcher.js'][39]++;
if (err) {
                _$jscoverage['lib/watcher.js'][40]++;
return _this.emit('error', err);
              }
              _$jscoverage['lib/watcher.js'][42]++;
_results = [];
              _$jscoverage['lib/watcher.js'][43]++;
for (_i = 0, _len = articles.length; _i < _len; _i++) {
                _$jscoverage['lib/watcher.js'][44]++;
article = articles[_i];
                _$jscoverage['lib/watcher.js'][45]++;
if (!_this.lastPubDate || _this.lastPubDate < article.pubDate / 1000) {
                  _$jscoverage['lib/watcher.js'][46]++;
_this.emit('new article', article);
                  _$jscoverage['lib/watcher.js'][47]++;
_results.push(_this.lastPubDate = article.pubDate / 1000);
                } else {
                  _$jscoverage['lib/watcher.js'][49]++;
_results.push(void 0);
                }
              }
              _$jscoverage['lib/watcher.js'][52]++;
return _results;
            });
          };
          _$jscoverage['lib/watcher.js'][55]++;
return setInterval(function() {
            _$jscoverage['lib/watcher.js'][56]++;
return fetch(this.feedUrl);
          }, _this.interval * 1000);
        };
      })(this);
    }

    _$jscoverage['lib/watcher.js'][62]++;
Watcher.prototype.set = function(obj) {
      _$jscoverage['lib/watcher.js'][63]++;
var flag;
      _$jscoverage['lib/watcher.js'][64]++;
flag = false;
      _$jscoverage['lib/watcher.js'][65]++;
if (obj.feedUrl != null) {
        _$jscoverage['lib/watcher.js'][66]++;
if (obj.feedUrl != null) {
          _$jscoverage['lib/watcher.js'][67]++;
this.feedUrl = obj.feedUrl;
        }
        _$jscoverage['lib/watcher.js'][69]++;
flag = true;
      }
      _$jscoverage['lib/watcher.js'][71]++;
if (obj.interval != null) {
        _$jscoverage['lib/watcher.js'][72]++;
if (obj.interval != null) {
          _$jscoverage['lib/watcher.js'][73]++;
this.interval = obj.interval;
        }
        _$jscoverage['lib/watcher.js'][75]++;
flag = true;
      }
      _$jscoverage['lib/watcher.js'][77]++;
return flag;
    };

    _$jscoverage['lib/watcher.js'][80]++;
Watcher.prototype.run = function(callback) {
      _$jscoverage['lib/watcher.js'][81]++;
var frequency, initialize;
      _$jscoverage['lib/watcher.js'][82]++;
initialize = (function(_this) {
        _$jscoverage['lib/watcher.js'][83]++;
return function(callback) {
          _$jscoverage['lib/watcher.js'][84]++;
return request(_this.feedUrl, function(err, articles) {
            _$jscoverage['lib/watcher.js'][85]++;
if ((err != null) && (callback != null)) {
              _$jscoverage['lib/watcher.js'][86]++;
return callback(new Error(err), null);
            }
            _$jscoverage['lib/watcher.js'][88]++;
_this.lastPubDate = articles[articles.length - 1].pubDate / 1000;
            _$jscoverage['lib/watcher.js'][89]++;
_this.timer = _this.watch();
            _$jscoverage['lib/watcher.js'][90]++;
if (callback != null) {
              _$jscoverage['lib/watcher.js'][91]++;
return callback(null, articles);
            }
          });
        };
      })(this);
      _$jscoverage['lib/watcher.js'][96]++;
if (!this.interval || typeof this.interval === 'function') {
        _$jscoverage['lib/watcher.js'][97]++;
frequency = require('rss-frequency');
        _$jscoverage['lib/watcher.js'][98]++;
return frequency(this.feedUrl, (function(_this) {
          _$jscoverage['lib/watcher.js'][99]++;
return function(error, interval) {
            _$jscoverage['lib/watcher.js'][100]++;
if (error != null) {
              _$jscoverage['lib/watcher.js'][101]++;
if (callback != null) {
                _$jscoverage['lib/watcher.js'][102]++;
return callback(new Error(error), null);
              }
            }
            _$jscoverage['lib/watcher.js'][105]++;
if (typeof _this.interval === 'function') {
              _$jscoverage['lib/watcher.js'][106]++;
_this.interval = _this.interval(interval);
            } else {
              _$jscoverage['lib/watcher.js'][108]++;
_this.interval = interval;
            }
            _$jscoverage['lib/watcher.js'][110]++;
if (isNaN(_this.interval / 1)) {
              _$jscoverage['lib/watcher.js'][111]++;
if (callback != null) {
                _$jscoverage['lib/watcher.js'][112]++;
return callback(new Error("interval object isnt instanceof Number"), null);
              }
            }
            _$jscoverage['lib/watcher.js'][115]++;
if (_this.interval / 1 < 0) {
              _$jscoverage['lib/watcher.js'][116]++;
if (callback != null) {
                _$jscoverage['lib/watcher.js'][117]++;
return callback(new Error("interval has given negative value"), null);
              }
            }
            _$jscoverage['lib/watcher.js'][120]++;
return initialize(callback);
          };
        })(this));
      } else {
        _$jscoverage['lib/watcher.js'][124]++;
return initialize(callback);
      }
    };

    _$jscoverage['lib/watcher.js'][128]++;
Watcher.prototype.stop = function() {
      _$jscoverage['lib/watcher.js'][129]++;
if (!this.timer) {
        _$jscoverage['lib/watcher.js'][130]++;
throw new Error("RSS-Watcher isnt running now");
      }
      _$jscoverage['lib/watcher.js'][132]++;
clearInterval(this.timer);
      _$jscoverage['lib/watcher.js'][133]++;
return this.emit('stop');
    };

    _$jscoverage['lib/watcher.js'][136]++;
return Watcher;

  })(EventEmitter);

  _$jscoverage['lib/watcher.js'][140]++;
request = (function(_this) {
    _$jscoverage['lib/watcher.js'][141]++;
return function(feedUrl, callback) {
      _$jscoverage['lib/watcher.js'][142]++;
return parser(feedUrl, function(err, articles) {
        _$jscoverage['lib/watcher.js'][143]++;
if (err != null) {
          _$jscoverage['lib/watcher.js'][144]++;
return callback(err, null);
        }
        _$jscoverage['lib/watcher.js'][146]++;
articles.sort(function(a, b) {
          _$jscoverage['lib/watcher.js'][147]++;
return a.pubDate / 1000 - b.pubDate / 1000;
        });
        _$jscoverage['lib/watcher.js'][149]++;
return callback(null, articles);
      });
    };
  })(this);

  _$jscoverage['lib/watcher.js'][154]++;
module.exports = Watcher;

}).call(this);
